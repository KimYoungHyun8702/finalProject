<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mugs.config.mapper.academicProbationMapper">
	<sql id="select-academicProbation">
		SELECT probation_id,
		probation_year,
		probation_semester,
		probation_credit_average,
		stu_id
		FROM ACADEMIC_PROBATION
	</sql>

	<resultMap type="academicProbation" id="academicProbation-basic-resultmap">
		<id column="probation_id" property="probationId" />
		<result column="probation_year" property="probationYear" />
		<result column="probation_semester" property="probationSemester" />
		<result column="probation_credit_average" property="probationCreditAverage" />
		<result column="stu_id" property="stuId" />
	</resultMap>
	
	<resultMap type="academicProbation" id="academicProbation-count-resultmap" extends="academicProbation-basic-resultmap">
		<result column="count" property="count" />
	</resultMap>
	
	<resultMap type="academicProbation" id="academicProbation-expel-resultmap" extends="academicProbation-basic-resultmap">
		<id column="users_id" property="usersId" />
		<result column="users_name" property="usersName" />
		<result column="major_name" property="majorName" />
		<result column="users_enable" property="usersEnable" />
	</resultMap>
	
	<!-- Insert -->
	<insert id="insertAcademicProbation" parameterType="academicProbation">
		<selectKey resultType="int" keyProperty="probationId" order="BEFORE">
			SELECT PROBATION_ID_SEQ.nextval FROM dual
		</selectKey>
		INSERT INTO academic_probation 
		VALUES(
		#{probationId},
		#{probationYear},
		#{probationSemester}, 
		#{probationCreditAverage}, 
		#{stuId})
	</insert>
	<!-- Update -->
	<update id="updateAcademicCalendarById" parameterType="academicProbation">
		UPDATE academicprobation
		SET probation_year=#{probationYear},
		probation_semester=#{probationSemester},
		probation_credit_average=#{probationCreditAverage},
		stu_id=#{stuId}
		WHERE probation_id=#{probationId}
	</update>
	
	<!-- delete -->
	<delete id="deleteAcademicProbation" parameterType="int">
		DELETE FROM academic_probation WHERE probation_id=#{value}
	</delete>

	<!-- 영현이꼬 -->
	<delete id="deleteAcademicProbationByThreeId" parameterType="map">
		DELETE FROM academic_probation
		 WHERE probation_year=#{probationYear}
		 AND   probation_semester=#{probationSemester}
		 AND   stu_id=#{stuId}
	</delete>

	<!-- select -->
	<select id="selectAcademicProbationList" resultMap="academicProbation-basic-resultmap">
		<include refid="select-academicProbation" />
	</select>

	<select id="selectAcademicProbationById" resultMap="academicProbation-basic-resultmap"
		parameterType="int">
		<include refid="select-academicProbation" />
		WHERE probation_id=#{value}
	</select>
	
	<select id="selectAcademicProbationByStuId" resultMap="academicProbation-count-resultmap" parameterType="string">
		SELECT probation_id, probation_year, probation_semester, probation_credit_average, stu_id,
		 (SELECT count(stu_id) FROM academic_probation WHERE stu_id=#{value}) count FROM academic_probation WHERE stu_id=#{value}
	</select> 

	<!-- 영현이꼬 -->
	<select id="selectAcademicProbationByThreeId" resultMap="academicProbation-basic-resultmap" parameterType="map">
		<include refid="select-academicProbation" />
		WHERE probation_year=#{probationYear}
		AND   probation_semester=#{probationSemester}
		AND   stu_id=#{stuId}
	</select>
	
	<select id="selectForExpel"	resultMap="academicProbation-expel-resultmap" parameterType="String">
		<![CDATA[
		SELECT a.probation_year, a.probation_semester
			FROM academic_probation a, student s, users u, major m
			WHERE a.stu_id = s.stu_id
			AND s.stu_id = u.users_id
			AND s.major_id = m.major_id
			AND a.stu_id =#{value}
		]]>
	</select>
	
	<select id="selectForExpelStudentInfo"	resultMap="academicProbation-expel-resultmap">
		<![CDATA[
			SELECT distinct a.stu_id, u.users_id, u.users_name, m.major_name, u.users_enable
			FROM academic_probation a, student s, users u, major m
			WHERE a.stu_id = s.stu_id
			AND s.stu_id = u.users_id
			AND s.major_id = m.major_id
			AND a.stu_id IN(SELECT stu_id
  							FROM academic_probation
 							GROUP BY stu_id
							HAVING count(stu_id) >= 3)
		]]>
	</select>
	
</mapper>