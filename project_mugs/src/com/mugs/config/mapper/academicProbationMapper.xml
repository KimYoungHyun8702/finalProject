<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mugs.config.mapper.academicProbationMapper">
	<sql id="select-academicProbation">
		SELECT probation_id,
		probation_year,
		probation_semester,
		probation_credit_average,
		stu_id
		FROM ACADEMIC_PROBATION
	</sql>

	<resultMap type="academicProbation" id="academicProbation-basic-resultmap">
		<id column="probation_id" property="probationId" />
		<result column="probation_year" property="probationYear" />
		<result column="probation_semester" property="probationSemester" />
		<result column="probation_credit_average" property="probationCreditAverage" />
		<result column="stu_id" property="stuId" />
	</resultMap>
	
	<resultMap type="academicProbation" id="academicProbation-count-resultmap" extends="academicProbation-basic-resultmap">
		<result column="count" property="count" />
	</resultMap>
	
	<!-- Insert -->
	<insert id="insertAcademicProbation" parameterType="academicProbation">
		<selectKey resultType="int" keyProperty="probationId" order="BEFORE">
			SELECT ACADEMIC_PROBATION_ID_SEQ.nextval FROM dual
		</selectKey>
		INSERT INTO academicprobation VALUES(#{probationId},#{probationYear},
		#{probationSemester}, #{probationAverage}, #{stuId})
	</insert>
	<!-- Update -->
	<update id="updateAcademicCalendarById" parameterType="academicProbation">
		UPDATE academicprobation
		SET probation_year=#{probationYear},
		probation_semester=#{probationSemester},
		probation_credit_average=#{probationCreditAverage},
		stu_id=#{stuId}
		WHERE probation_id=#{probationId}
	</update>
	
	<!-- delete -->
	<delete id="deleteAcademicProbation" parameterType="int">
		DELETE FROM academicprobation WHERE probation_id=#{value}
	</delete>

	<!-- select -->
	<select id="selectAcademicProbationList" resultMap="academicProbation-basic-resultmap">
		<include refid="select-academicProbation" />
	</select>

	<select id="selectAcademicProbationById" resultMap="academicProbation-basic-resultmap"
		parameterType="int">
		<include refid="select-academicProbation" />
		WHERE probation_id=#{value}
	</select>
	
	<select id="selectAcademicProbationByStuId" resultMap="academicProbation-count-resultmap" parameterType="string">
		SELECT probation_id, probation_year, probation_semester, probation_credit_average, stu_id,
		 (SELECT count(stu_id) FROM academic_probation WHERE stu_id=#{value}) count FROM academic_probation WHERE stu_id=#{value}
	</select> 

</mapper>